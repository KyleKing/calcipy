version: 0.0.{build}

image:
  - Ubuntu
  - Visual Studio 2019

environment:
  # Windows Python versions: https://www.appveyor.com/docs/windows-images-software/#python
  #   For linux: https://www.appveyor.com/docs/linux-images-software/#python
  matrix:
    - PYTHON_WIN: C:/Python37
      PYTHON_STACK: 3.7
    # - PYTHON_WIN: C:/Python39
    #   PYTHON_STACK: 3.9

  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  CODECOV_TOKEN: d414dacb-5b8d-4c0b-94e1-42fe8393187d

  # To encrypt passwords, in the AppVeyor Account, go to "Settings" -> "Encrypt YAML"

# See: https://help.appveyor.com/discussions/questions/32001-ubuntu-python-3-as-default
stack: python %PYTHON_STACK%

cache:
  - .venv -> poetry.lock

build: off

# Specify commands specific to platform (cmd-Windows/sh-Linux/None-Both)
install:
# Set Python paths based on environment variable from matrix
- cmd: set PATH=%PYTHON_WIN%/Scripts;%PYTHON_WIN%;%PATH%
- python --version
# Install pipx to manage CLI installations (poetry, codecov)
- python -m pip install pipx
# Set the path to the pipx bin because "python -m pipx ensurepath" doesn't work without reload
- cmd: set PATH=%USERPROFILE%\.local\bin;%PATH%
- sh: PATH=~/.local/bin:$PATH
# Debug the PATH (if needed)
- cmd: echo %PATH%
- sh: echo $PATH
# Install poetry and configure
- python -m pipx install poetry
- poetry config --list
- poetry config virtualenvs.in-project true
# Install project-specific dependencies and extras
- poetry install -E dev -E lint -E test -E commitizen_legacy

test_script:
- poetry run doit run coverage

deploy_script:
- echo "Deploying..."

on_success:
- echo "On Success..."
# Install codecov and upload the coverage results
- python -m pipx install codecov
- codecov

on_failure:
- echo "On Error..."

artifacts:
  # PLANNED: Specify single files, like wheels, but zip the docs/reports
  - path: releases/tests/*
