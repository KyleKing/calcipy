# Docs: https://github.com/charliermarsh/ruff
# Tip: poetry run python -m ruff --explain RUF100

line-length = 120

select = ['ALL']
ignore = [
	'ANN101',  # Missing type annotation for `self` in method
    'D203',    # "1 blank line required before class docstring" (Conflicts with D211)
    'D213',    # "Multi-line docstring summary should start at the second line" (Conflicts with D212)
	'D4',      # Numpy-Style Docstrings (e.g. "Section name should end with a newline ("Returns")")
	'TCH002',  # Move third-party import {} into a type-checking block
	'TID252',  # Relative imports from parent modules are banned
	'TRY003',  # Avoid specifying long messages outside the exception class
]
unfixable = [
    'ERA001',  # Commented out code
]

[flake8-tidy-imports.banned-api]
"typing".msg = "Use beartype.typing instead."

[flake8-quotes]
inline-quotes = 'single'

[isort]
known-first-party = ['calcipy']

[per-file-ignores]
'*/__init__.py' = [
	'D104',  # Missing docstring in public package
	'F401',  # imported but unused; consider adding to __all__ or using a redundant alias
]
'*tests/*.py' = [
    'ANN201',  # Missing return type annotation for public function
    'PT004',   # flake8-pytest-style: fixture does not return
    'S101',    # Matches 'assert'
]

[pylint]
max-args = 6

[pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
