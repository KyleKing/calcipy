[build-system]
requires = [ "poetry-core>=1.0",]
build-backend = "poetry.core.masonry.api"

[tool.isort]
balanced_wrapping = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
length_sort = false
line_length = 120

[tool.poetry]
name = "calcipy"
version = "0.1.0"
description = "Python package to simplify development. Includes functionality for task running, testing, linting, documenting, and more"
license = "MIT"
authors = [ "Kyle King <https://github.com/KyleKing>",]
maintainers = []
readme = "README.md"
repository = "https://github.com/kyleking/calcipy"
documentation = "https://kyleking.me/calcipy/"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "$version"
version_files = [ "pyproject.toml", "calcipy/__init__.py",]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/kyleking/calcipy/issues"

[tool.poetry.dependencies]
python = "^3.8, <3.9"
attrs = "*"
decorator = "*"
loguru = "*"
toml = "*"
transitions = "*"

[tool.poetry.dev-dependencies]
add-trailing-comma = "*"
autopep8 = "*"
better-exceptions = "*"
cohesion = "*"
commitizen = "*"
darglint = "*"
dlint = "*"
doit = "*"
flake8 = "*"
flake8-2020 = "*"
flake8-aaa = "*"
flake8-annotations = "*"
flake8-assertive = "*"
flake8-bandit = "*"
flake8-blind-except = "*"
flake8-breakpoint = "*"
flake8-broken-line = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-cognitive-complexity = "*"
flake8-commas = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-deprecated = "*"
flake8-docstrings = "*"
flake8-eradicate = "*"
flake8-expression-complexity = "*"
flake8-fixme = "*"
flake8-functions = "*"
flake8-isort = "*"
flake8-logging-format = "*"
flake8-markdown = "*"
flake8-mock = "*"
flake8-mutable = "*"
flake8-pep3101 = "*"
flake8-plone-hasattr = "*"
flake8-print = "*"
flake8-printf-formatting = "*"
flake8-pytest-style = "*"
flake8-quotes = "*"
flake8-return = "*"
flake8-SQL = "*"
flake8-string-format = "*"
flake8-tuple = "*"
flake8-variables-names = "*"
hacking = "*"
iniparse = "*"
isort = "*"
markdown-include = "*"
mkdocs-material = "*"
mkdocstrings = "*"
pandas-vet = "*"
pep8-naming = "*"
pre-commit = "*"
preconvert = "*"
preconvert_numpy = "*"
proselint = "*"
pystache = "*"
pytest = "*"
pytest-cov = "*"
pytest-html = "*"
pytest-watch = "*"
pyupgrade = "*"
radon = "*"
subprocess-tee = "*"
toml = "*"
tqdm = "*"

[tool.poetry.extras]
dev = [ "add-trailing-comma", "autopep8", "better-exceptions", "cohesion", "commitizen", "darglint", "dlint", "flake8", "flake8-2020", "flake8-aaa", "flake8-annotations", "flake8-assertive", "flake8-bandit", "flake8-blind-except", "flake8-breakpoint", "flake8-broken-line", "flake8-bugbear", "flake8-builtins", "flake8-cognitive-complexity", "flake8-commas", "flake8-comprehensions", "flake8-debugger", "flake8-deprecated", "flake8-docstrings", "flake8-eradicate", "flake8-expression-complexity", "flake8-fixme", "flake8-functions", "flake8-isort", "flake8-logging-format", "flake8-markdown", "flake8-mock", "flake8-mutable", "flake8-pep3101", "flake8-plone-hasattr", "flake8-print", "flake8-printf-formatting", "flake8-pytest-style", "flake8-quotes", "flake8-return", "flake8-SQL", "flake8-string-format", "flake8-tuple", "flake8-variables-names", "hacking", "iniparse", "isort", "mkdocs-material", "matplotlib", "pandas-vet", "pep8-naming", "pre-commit", "proselint", "pystache", "pytest", "pytest-cov", "pytest-html", "pytest-watch", "pyupgrade", "radon", "subprocess-tee", "toml", "tqdm", "yesqa", "markdown-include", "mkdocstrings",]
serializers = [ "preconvert", "preconvert_numpy",]
