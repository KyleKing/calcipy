[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.commitizen]
version = "1.0.0"
version_files = ["calcipy/__init__.py", "pyproject.toml"]

[tool.poetry]
authors = ["Kyle King <dev.act.kyle@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities"
] # https://pypi.org/classifiers/
description = "Python package to simplify development. Includes functionality for task running, testing, linting, documenting, and more"
documentation = "https://calcipy.kyleking.me"
include = ["LICENSE.md"]
keywords = ["nox", "python-poetry"]
license = "MIT"
maintainers = []
name = "calcipy"
readme = "docs/README.md"
repository = "https://github.com/kyleking/calcipy"
version = "1.0.0"

[tool.poetry.dependencies]
python = "^3.8.12"
arrow = {optional = true, version = ">=1.2.3"} # tags
bandit = {optional = true, version = ">=1.7.4"} # lint
bidict = {optional = true, version = ">=0.22.1"} # stale
cohesion = {optional = true, version = ">=1.0.0"} # flake8
dlint = {optional = true, version = ">=0.14.0"} # flake8
flake8-aaa = {optional = true, version = ">=0.12.2"} # flake8
flake8-absolute-import = {optional = true, version = ">=1.0.0.1"} # flake8
flake8-adjustable-complexity = {optional = true, version = ">=0.0.6"} # flake8
flake8-annotations-complexity = {optional = true, version = ">=0.0.7"} # flake8
flake8-broken-line = {optional = true, version = ">=0.6.0"} # flake8
flake8-class-attributes-order = {optional = true, version = ">=0.1.3"} # flake8
flake8-executable = {optional = true, version = ">=2.1.3"} # flake8
flake8-expression-complexity = {optional = true, version = ">=0.0.11"} # flake8
flake8-fine-pytest = {optional = true, version = ">=1.0.3"} # flake8
flake8-fixme = {optional = true, version = ">=1.1.1"} # flake8
flake8-functions = {optional = true, version = ">=0.0.7"} # flake8
flake8-isort = {optional = true, version = ">=6.0.0"} # flake8
flake8-logging-format = {optional = true, version = ">=0.9.0"} # flake8
flake8-markdown = {optional = true, version = ">=0.4.0"} # flake8
flake8-pep3101 = {optional = true, version = ">=2.0.0"} # flake8
flake8-pie = {optional = true, version = ">=0.16.0"} # flake8
flake8-printf-formatting = {optional = true, version = ">=1.1.2"} # flake8
flake8-raise = {optional = true, version = ">=0.0.5"} # flake8
flake8-require-beartype = {optional = true, version = ">=0.1.1"} # flake8
flake8-sql = {optional = true, version = ">=0.4.1"} # flake8
flake8-string-format = {optional = true, version = ">=0.3.0"} # flake8
flake8-super = {optional = true, version = ">=0.1.3"} # flake8
flake8-tuple = {optional = true, version = ">=0.4.1"} # flake8
flake8-typing-imports = {optional = true, version = ">=1.14.0"} # flake8
flake8-use-pathlib = {optional = true, version = ">=0.3.0"} # flake8
flake8-variables-names = {optional = true, version = ">=0.0.5"} # flake8
invoke = ">=2.0.0"
mypy = {optional = true, version = ">=1.0.0"} # types
nox-poetry = {optional = true, version = ">=1.0.2"} # test
pandas = {optional = true, version = ">=1.5.3"} # tags
pre-commit = ">=3.0.4" # TODO: Replace with capture_shell?
pylint = {optional = true, version = ">=2.16.2"} # pylint
pyrate_limiter = {optional = true, version = ">=2.4"} # stale
pytest = {optional = true, version = ">=7.2.1"} # test
pytest-cov = {optional = true, version = ">=4.0.0"} # test
pytest-randomly = {optional = true, version = ">=3.12.0"} # test
pytest-watcher = {optional = true, version = ">=0.2.6"} # test
requests = {optional = true, version = ">=2.28.1"} # stale
ruff = {optional = true, version = ">=0.0.238"} # lint
shoal = ">=0.5.0" # poetry run pip install -e ../shoal
tabulate = {optional = true, version = ">=0.9.0"} # tags: Required for pandas to markdown
tomli = {markers = "python_version < '3.11'", version = ">=2.0.1"}
tryceratops = {optional = true, version = ">=1.1.0"} # flake8
xenon = {optional = true, version = ">=0.9.0"} # flake8: Wraps radon, which has a flake8 plugin

[tool.poetry.extras]
flake8 = [
  "cohesion",
  "dlint",
  "flake8-aaa",
  "flake8-absolute-import",
  "flake8-adjustable-complexity",
  "flake8-annotations-complexity",
  "flake8-broken-line",
  "flake8-class-attributes-order",
  "flake8-executable",
  "flake8-expression-complexity",
  "flake8-fine-pytest",
  "flake8-fixme",
  "flake8-functions",
  "flake8-isort",
  "flake8-logging-format",
  "flake8-markdown",
  "flake8-pep3101",
  "flake8-pie",
  "flake8-printf-formatting",
  "flake8-raise",
  "flake8-require-beartype",
  "flake8-sql",
  "flake8-string-format",
  "flake8-super",
  "flake8-tuple",
  "flake8-typing-imports",
  "flake8-use-pathlib",
  "flake8-variables-names",
  "tryceratops",
  "xenon"
]
lint = [
  "bandit",
  "ruff"
]
nox = ["nox-poetry"]
pylint = ["pylint"]
stale = [
  "bidict",
  "pyrate_limiter",
  "requests"
]
tags = [
  "arrow",
  "pandas",
  "tabulate"
]
test = [
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "pytest-watcher"
]
types = ["mypy"]

[tool.poetry.group.dev.dependencies]
types-pyyaml = {optional = true, version = ">=6.0.12.6"}
types-requests = {optional = true, version = ">=2.28.11.13"}

[tool.poetry.scripts]
calcipy = "calcipy.main:start"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/kyleking/calcipy/issues"
"Changelog" = "https://github.com/kyleking/calcipy/blob/main/docs/docs/CHANGELOG.md"

[tool.pyright]
include = ["calcipy"]
pythonVersion = "3.8"
venv = ".venv"
venvPath = "."
