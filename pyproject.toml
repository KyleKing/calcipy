[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.commitizen]
version = "1.2.0"
version_files = ["calcipy/__init__.py:^__version", "pyproject.toml:^version"]

[tool.poetry]
authors = ["Kyle King <dev.act.kyle@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
] # https://pypi.org/classifiers/
description = "Python package to simplify development"
documentation = "https://calcipy.kyleking.me"
include = ["LICENSE"]
keywords = ["nox", "python-poetry"]
license = "MIT"
maintainers = []
name = "calcipy"
readme = "docs/README.md"
repository = "https://github.com/kyleking/calcipy"
version = "1.2.0"

[tool.poetry.dependencies]
python = "^3.8.12"
arrow = {optional = true, version = ">=1.2.3"} # tags
autopep8 = {optional = true, version = ">=2.0.1"} # flake8
bandit = {optional = true, version = ">=1.7.4"} # lint
beartype = ">=0.12.0"
bidict = {optional = true, version = ">=0.22.1"} # stale
commitizen = {optional = true, version = ">=2.42.0"} # doc
corallium = ">=0.1.0"
dlint = {optional = true, version = ">=0.14.0"} # flake8
flake8 = {optional = true, version = ">=6.0.0"} # flake8
flake8-adjustable-complexity = {optional = true, version = ">=0.0.6"} # flake8
flake8-annotations-complexity = {optional = true, version = ">=0.0.7"} # flake8
flake8-executable = {optional = true, version = ">=2.1.3"} # flake8
flake8-expression-complexity = {optional = true, version = ">=0.0.11"} # flake8
flake8-functions = {optional = true, version = ">=0.0.7"} # flake8
flake8-pep3101 = {optional = true, version = ">=2.0.0"} # flake8
flake8-pie = {optional = true, version = ">=0.16.0"} # flake8
flake8-printf-formatting = {optional = true, version = ">=1.1.2"} # flake8
flake8-raise = {optional = true, version = ">=0.0.5"} # flake8
flake8-require-beartype = {optional = true, version = ">=0.1.1"} # flake8
flake8-sql = {optional = true, version = ">=0.4.1"} # flake8
flake8-string-format = {optional = true, version = ">=0.3.0"} # flake8
flake8-super = {optional = true, version = ">=0.1.3"} # flake8
flake8-tuple = {optional = true, version = ">=0.4.1"} # flake8
flake8-typing-imports = {optional = true, version = ">=1.14.0"} # flake8
flake8-use-pathlib = {optional = true, version = ">=0.3.0"} # flake8
flake8-variables-names = {optional = true, version = ">=0.0.5"} # flake8
invoke = ">=2.0.0"
mkdocs = {optional = true, version = ">=1.4.1"} # doc
mkdocs-build-plantuml-plugin = {optional = true, version = ">=1.7.4"} # doc
mkdocs-gen-files = {optional = true, version = ">=0.4.0"} # doc
mkdocs-git-revision-date-localized-plugin = {optional = true, version = ">=1.0.1"} # doc
mkdocs-include-markdown-plugin = {markers = "python_version < '3.12'", optional = true, version = ">=4.0.3"} # doc
mkdocs-literate-nav = {optional = true, version = ">=0.5.0"} # doc
mkdocs-material = {optional = true, version = ">=8.2.16"} # doc
mkdocs-section-index = {optional = true, version = ">=0.3.4"} # doc
mkdocstrings = {extras = ["python"], optional = true, version = ">=0.18.1"} # doc
mypy = {optional = true, version = ">=1.0.0"} # types
nox-poetry = {optional = true, version = ">=1.0.2"} # test
pandas = {optional = true, version = ">=1.5.3"} # docs,tags
pip-check = {optional = true, version = ">=2.8.1"} # lint
pydantic = ">=1.10.5"
pylint = {optional = true, version = ">=2.16.2"} # doc,pylint
pyrate_limiter = {optional = true, version = ">=2.4"} # stale
pytest = {optional = true, version = ">=7.2.1"} # test
pytest-cov = {optional = true, version = ">=4.0.0"} # test
pytest-randomly = {optional = true, version = ">=3.12.0"} # test
pytest-watcher = {optional = true, version = ">=0.2.6"} # test
python-box = {optional = true, version = ">=6.0.2"} # ddict
pyyaml = {optional = true, version = ">=5.2"} # doc,tags
requests = {optional = true, version = ">=2.28.1"} # stale
ruff = {optional = true, version = ">=0.0.253"} # lint
semgrep = {optional = true, version = ">=1.12.1"} # lint
tabulate = {optional = true, version = ">=0.9.0"} # tags: Required for pandas to markdown
transitions = {optional = true, version = ">=0.9.0"} # tags: docs

[tool.poetry.extras]
ddict = ["python-box"]
doc = [
  "commitizen",
  "mkdocs",
  "mkdocs-build-plantuml-plugin",
  "mkdocs-gen-files",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-include-markdown-plugin",
  "mkdocs-literate-nav",
  "mkdocs-material",
  "mkdocs-section-index",
  "mkdocstrings",
  "pandas",
  "pylint", # for 'pyreverse'
  "pyyaml",
  "transitions",
]
flake8 = [
  "dlint",
  "flake8",
  "flake8-adjustable-complexity",
  "flake8-annotations-complexity",
  "flake8-executable",
  "flake8-expression-complexity",
  "flake8-functions",
  "flake8-pep3101",
  "flake8-pie",
  "flake8-printf-formatting",
  "flake8-raise",
  "flake8-require-beartype",
  "flake8-sql",
  "flake8-string-format",
  "flake8-super",
  "flake8-tuple",
  "flake8-typing-imports",
  "flake8-use-pathlib",
  "flake8-variables-names",
]
lint = [
  "autopep8",
  "bandit",
  "pip-check",
  "ruff",
  "semgrep",
]
nox = ["nox-poetry"]
pylint = ["pylint"]
stale = [
  "arrow",
  "bidict",
  "pyrate_limiter",
  "requests",
]
tags = [
  "arrow",
  "pandas",
  "pyyaml",
  "tabulate",
]
test = [
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "pytest-watcher",
]
types = ["mypy"]

[tool.poetry.group.dev.dependencies]
# pytest-benchmark = ">=3.4.1"  # Provides the benchmark fixture
hypothesis = {extras = ["cli"], version = ">=6.58.0"} # Use CLI with: "poetry run hypothesis write calcipy.dot_dict.ddict"
pytest-recording = ">=0.12.0"
pytest-subprocess = ">=1.4.1"
types-pyyaml = ">=6.0.12.6"
types-requests = ">=2.28.11.13"
types-setuptools = ">=67.3.0.1"

[tool.poetry.scripts]
calcipy = "calcipy.scripts:start"
calcipy_lint = "calcipy.scripts:start_lint"
calcipy_tags = "calcipy.scripts:start_tags"
calcipy_types = "calcipy.scripts:start_types"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/kyleking/calcipy/issues"
"Changelog" = "https://github.com/kyleking/calcipy/blob/main/docs/docs/CHANGELOG.md"

[tool.pyright]
include = ["calcipy"]
pythonVersion = "3.8"
