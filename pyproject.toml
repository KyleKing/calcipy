[build-system]
requires = ["poetry-core>=1.0.2"]
build-backend = "poetry.core.masonry.api"

[tool.calcipy]
ignore_patterns = [
    ".test_calcipy_project/*",
    ".test_calcipy_project/*/*",
    ".test_calcipy_project/*/*/*",
    "tests/**/cassettes/**/*.yaml",
    "tests/data/sample_doc_files/*",
]

[tool.commitizen]
name = "cz_legacy"
change_type_order = [
    "BREAKING CHANGE",
    "Feat",
    "Fix",
    "Refactor",
    "Perf",
    "New (Old)",
    "Change (Old)",
    "Fix (Old)",
]
version = "0.6.0"
# TODO: Pending calver support: https://github.com/commitizen-tools/commitizen/pull/385
tag_format = "2021.$version"
version_files = ["pyproject.toml", "calcipy/__init__.py", "appveyor.yml"]

[tool.commitizen.cz_legacy_map]
Chg = "Change (Old)"
Fix = "Fix (Old)"
New = "New (Old)"

[tool.isort]
balanced_wrapping = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "calcipy"
length_sort = false
line_length = 120
multi_line_output = 5

[tool.poetry]
name = "calcipy"
version = "2021.0.6.0"
description = "Python package to simplify development. Includes functionality for task running, testing, linting, documenting, and more"
license = "MIT"
authors = ["Kyle King <dev.act.kyle@gmail.com>"]
maintainers = []
repository = "https://github.com/kyleking/calcipy"
documentation = "https://calcipy.kyleking.me"
readme = "docs/README.md"
include = ["LICENSE.md"]
keywords = ["python-poetry", "doit", "nox", "flake8"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Flake8",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
] # https://pypi.org/classifiers/

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/kyleking/calcipy/issues"

[tool.poetry.dependencies]
python = "^3.8"
attrs = ">=21"
attrs_strict = ">=0.2.2"
beartype = ">=0.9"       # dyce has nice no-op decorator for beartype, but shouldn't be optional
decorator = ">=5"
loguru = ">=0.5"
python-box = ">=5.4"

# TODO: Implement fully optional imports with: https://github.com/KyleKing/calcipy/issues/19#issuecomment-807886404
doit = ">=0.33"                                            # Should be optional, but needed for doit_tasks
pandas = ">=1.1"                                           # Should be optional, but needed for doc task (and companion numpy)
pendulum = ">=2"                                           # Should be optional, but needed for package tasks
pre-commit = ">=2.15"                                      # Should be optional, but needed for doit_globals
pyrate_limiter = ">=2.4"                                   # Should be optional, but needed for packaging task
sty = { version = ">=1.0.0rc2", allow-prereleases = true } # Should be optional, but needed for Custom Summary
tabulate = ">=0.8"                                         # Should be optional, but needed for doc task
toml = ">=0.10"                                            # Should be optional, but needed for doit_globals
transitions = ">=0.8"                                      # Should be optional, but needed for doc tasks
# Indirect imports necessary only to comply with check_imports
pyyaml = "*"   # Should be optional, but needed for doit_globals
requests = "*" # Should be optional, but needed for packaging tasks

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
better-exceptions = ">=0.3"
commitizen = ">=2"                                                                            # Prevent install of 1.X
markdown-include = ">=0.6"
mkdocs-git-revision-date-plugin = ">=0.3"
mkdocs-material = ">=7.1"
livereload = "*"                                                                              # PLANNED: Temporary - a plugin expected livereload to be installed...
pdbpp = { version = ">=0.10", markers = "sys_platform != 'win32' or python_version < '3.9'" }
pdocs = ">=1.1"
pyupgrade = ">=2.19.1"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
add-trailing-comma = ">=2.1.0"
autoflake = ">=1.4"
autopep8 = ">=1.5"
cohesion = ">=1"
darglint = ">=1.8"
dlint = ">=0.11"
flake8 = ">=3.8"
flake8-2020 = ">=1.6"
flake8-aaa = ">=0.12"
flake8-annotations = ">=2.6"
flake8-assertive = ">=1.3"
flake8-bandit = ">=2.1"
flake8-blind-except = ">=0.2"
flake8-breakpoint = ">=1.1"
flake8-broken-line = ">=0.3"
flake8-bugbear = ">=21.4"
flake8-builtins = ">=1.5"
flake8-cognitive-complexity = ">=0.1"
flake8-commas = ">=2.0"
flake8-comprehensions = ">=3.5"
flake8-debugger = ">=4.0"
flake8-docstrings = ">=1.6"
flake8-eradicate = ">=1.0"
flake8-expression-complexity = ">=0.0.9"
flake8-fixme = ">=1.1"
flake8-functions = ">=0.0.6"                                           # See: https://github.com/best-doctor/flake8-functions/issues/7
flake8-isort = ">=4.0"
flake8-logging-format = ">=0.6"
flake8-markdown = ">=0.2"
flake8-pep3101 = ">=1.3"
flake8-plone-hasattr = { version = ">=0.2", allow-prereleases = true }
flake8-print = ">=4.0"
flake8-printf-formatting = ">=1.1"
flake8-pytest-style = ">=1.4"
flake8-quotes = ">=3.2"
flake8-return = ">=1.1"
flake8-SQL = ">=0.4"
flake8-string-format = ">=0.3"
flake8-tuple = ">=0.4"
flake8-variables-names = ">=0.0.4"
hacking = ">=4"                                                        # Version set to prevent oscillation back to 3
isort = ">=5"                                                          # Use latest isort
it = ">=1"
licensecheck = ">=2021.1.2"
pandas-vet = ">=0.2"
pep8-naming = ">=0.11"
proselint = ">=0.10"
pylint = ">=2.8"
vulture = ">=2.3"
wily = ">=1.20"                                                        # FYI: Warning, has pinned versions of plotly, radon, etc. TODO: Run in nox-only?
xenon = ">=0.8"
yamllint = ">=1.26"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = ">=6"
diff-cover = ">=6.4"
lxml = "*"                  # required for the HTML mypy report format
mypy = ">=0.812"
nox-poetry = ">=0.8"
pytest = ">=6"
pytest-html = ">=3.1"
pytest-randomly = ">=3.8"
pytest-recording = ">=0.11"
pytest-watcher = ">=0.2"    # https://github.com/joeyespo/pytest-watch/issues/121

[tool.poetry.group.commitizen_legacy]
optional = true

[tool.poetry.group.commitizen_legacy.dependencies]
cz_legacy = ">=0.1.2"
